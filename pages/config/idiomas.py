"""
Sistema de idiomas centralizado para Amaro Aviation Calculator
Suporte completo para Portugu√™s e Ingl√™s
"""

TRANSLATIONS = {
    # Portugu√™s (Brasil)
    'pt': {
        # Interface Principal
        'app_title': 'Amaro Aviation',
        'app_subtitle': 'Calculadora Inteligente de Custos Operacionais',
        'language_selector': 'üåê Idioma',
        
        # Navega√ß√£o e Abas
        'tab_monthly_profit': 'üìà Estimativa de Lucro Mensal',
        'tab_cost_comparison': '‚öñÔ∏è Comparativo de Custos',
        'tab_settings': '‚öôÔ∏è Configura√ß√µes e F√≥rmulas',
        
        # Campos de Entrada
        'aircraft_model': 'Modelo da Aeronave',
        'flight_hours_month': 'Horas de Voo por M√™s',
        'occupancy_rate': 'Taxa de Ocupa√ß√£o (%)',
        'annual_hours': 'Horas de Voo por Ano',
        'fixed_costs_annual': 'Custos Fixos Anuais (R$)',
        'include_charter_revenue': 'Incluir Receita de Charter',
        
        # Bot√µes
        'calculate': 'üöÄ Calcular',
        'save_settings': 'üíæ Salvar Configura√ß√µes',
        'reload_data': 'üîÑ Recarregar Dados',
        'presentation_mode': 'üì± Modo Apresenta√ß√£o',
        'export_excel': 'üìä Baixar Relat√≥rio Excel',
        'export_pdf': 'üìÑ Baixar Relat√≥rio PDF',
        'export_text': 'üìÑ Baixar Relat√≥rio Texto',
        
        # Resultados - Lucro Mensal
        'gross_revenue': 'Receita Bruta',
        'owner_share': 'Receita do Propriet√°rio',
        'amaro_share': 'Taxa Amaro Aviation',
        'operational_costs': 'Custos Operacionais',
        'net_profit': 'Lucro L√≠quido',
        'monthly_roi': 'ROI Mensal',
        'projected_annual_revenue': 'Receita Anual Projetada',
        
        # Resultados - Comparativo
        'own_management': 'Gest√£o Pr√≥pria',
        'amaro_management': 'Gest√£o Amaro Aviation',
        'annual_savings': 'Economia Anual',
        'monthly_savings': 'Economia Mensal',
        'savings_percentage': 'Percentual de Economia',
        'fixed_costs': 'Custos Fixos',
        'variable_costs': 'Custos Vari√°veis',
        'charter_revenue': 'Receita Charter',
        
        # Configura√ß√µes
        'operational_costs_params': 'Par√¢metros de Custos Operacionais',
        'market_reference_prices': 'Pre√ßos de Refer√™ncia do Mercado',
        'formulas_used': 'F√≥rmulas Utilizadas',
        'current_parameters': 'Par√¢metros Atuais',
        'impact_preview': 'Preview do Impacto',
        
        # Par√¢metros Espec√≠ficos
        'fuel_price': 'Pre√ßo do Combust√≠vel (R$/L)',
        'pilot_cost_hour': 'Custo Piloto (R$/h)',
        'annual_depreciation': 'Deprecia√ß√£o Anual (%)',
        'maintenance_costs': 'Custos de Manuten√ß√£o',
        'maintenance_turboprop': 'Manuten√ß√£o Turboprop (R$/h)',
        'maintenance_jet': 'Manuten√ß√£o Jato (R$/h)',
        'market_price_turboprop': 'Pre√ßo Mercado Turboprop (R$/h)',
        'market_price_jet': 'Pre√ßo Mercado Jato (R$/h)',
        
        # Status e Informa√ß√µes
        'system_status': 'Status do Sistema',
        'system_operational': 'Sistema Operacional',
        'models_configured': 'modelos configurados',
        'parameters_loaded': 'Par√¢metros carregados',
        'features': 'Funcionalidades',
        'usage_tips': 'Dicas de Uso',
        'quick_actions': 'A√ß√µes R√°pidas',
        
        # Mensagens de Sucesso/Erro
        'calculation_success': 'C√°lculo realizado com sucesso',
        'settings_saved': 'Configura√ß√µes salvas com sucesso!',
        'settings_save_error': 'Erro ao salvar configura√ß√µes',
        'calculation_error': 'Erro no c√°lculo',
        'data_load_error': 'Erro ao carregar dados',
        'no_models_configured': 'Nenhum modelo configurado',
        'parameters_validation_error': 'Erro na valida√ß√£o dos par√¢metros',
        
        # Insights e An√°lises
        'profitable_operation': 'Opera√ß√£o Rent√°vel',
        'operation_at_loss': 'Aten√ß√£o: Opera√ß√£o no Preju√≠zo',
        'monthly_deficit': 'D√©ficit mensal',
        'recommend_increase_occupancy': 'Recomenda-se aumentar ocupa√ß√£o ou revisar custos',
        'excellent_viability': 'Excelente viabilidade econ√¥mica',
        'consider_increase_frequency': 'Considere aumentar a frequ√™ncia nesta opera√ß√£o',
        
        # Gr√°ficos e Visualiza√ß√µes
        'financial_breakdown_monthly': 'Breakdown Financeiro Mensal',
        'annual_cost_comparison': 'Comparativo Anual: Gest√£o Pr√≥pria vs. Amaro Aviation',
        'cost_composition': 'Composi√ß√£o de Custos',
        'annual_savings_chart': 'Economia Anual',
        
        # Tooltips e Ajuda
        'occupancy_tooltip': 'Percentual de utiliza√ß√£o efetiva da aeronave',
        'fixed_costs_tooltip': 'Hangar, seguro, financiamento, etc.',
        'charter_revenue_tooltip': 'Considerar receita compensat√≥ria do charter',
        'realistic_projections_tip': 'Use ocupa√ß√£o de 70-80% para proje√ß√µes realistas',
        'consider_real_fixed_costs': 'Considere custos fixos reais (hangar, seguro, etc.)',
        'review_parameters_periodically': 'Revise par√¢metros periodicamente',
        'export_presentations': 'Exporte relat√≥rios para apresenta√ß√µes',
        
        # F√≥rmulas
        'cost_calculation_formula': 'C√°lculo de Custo por Hora',
        'savings_calculation_formula': 'C√°lculo de Economia',
        'roi_calculation_formula': 'C√°lculo de ROI',
        'formula_where': 'Onde:',
        'formula_fuel': 'Combust√≠vel = Consumo (L/h) √ó Pre√ßo Combust√≠vel (R$/L)',
        'formula_pilot': 'Piloto = Custo Piloto (R$/h)',
        'formula_maintenance': 'Manuten√ß√£o = Custo Manuten√ß√£o por tipo (R$/h)',
        'formula_depreciation': 'Deprecia√ß√£o = (Valor Aeronave √ó % Deprecia√ß√£o Anual) √∑ Horas Anuais',
        
        # Footer
        'developed_with_love': 'Desenvolvido com ‚ù§Ô∏è para excel√™ncia comercial',
        'refactored_system': 'Sistema Refatorado',
        'version': 'v3.0'
    },
    
    # English (US)
    'en': {
        # Main Interface
        'app_title': 'Amaro Aviation',
        'app_subtitle': 'Smart Operating Cost Calculator',
        'language_selector': 'üåê Language',
        
        # Navigation and Tabs
        'tab_monthly_profit': 'üìà Monthly Profit Estimation',
        'tab_cost_comparison': '‚öñÔ∏è Cost Comparison',
        'tab_settings': '‚öôÔ∏è Settings & Formulas',
        
        # Input Fields
        'aircraft_model': 'Aircraft Model',
        'flight_hours_month': 'Flight Hours per Month',
        'occupancy_rate': 'Occupancy Rate (%)',
        'annual_hours': 'Annual Flight Hours',
        'fixed_costs_annual': 'Annual Fixed Costs (R$)',
        'include_charter_revenue': 'Include Charter Revenue',
        
        # Buttons
        'calculate': 'üöÄ Calculate',
        'save_settings': 'üíæ Save Settings',
        'reload_data': 'üîÑ Reload Data',
        'presentation_mode': 'üì± Presentation Mode',
        'export_excel': 'üìä Download Excel Report',
        'export_pdf': 'üìÑ Download PDF Report',
        'export_text': 'üìÑ Download Text Report',
        
        # Results - Monthly Profit
        'gross_revenue': 'Gross Revenue',
        'owner_share': 'Owner Revenue',
        'amaro_share': 'Amaro Aviation Fee',
        'operational_costs': 'Operational Costs',
        'net_profit': 'Net Profit',
        'monthly_roi': 'Monthly ROI',
        'projected_annual_revenue': 'Projected Annual Revenue',
        
        # Results - Comparison
        'own_management': 'Own Management',
        'amaro_management': 'Amaro Aviation Management',
        'annual_savings': 'Annual Savings',
        'monthly_savings': 'Monthly Savings',
        'savings_percentage': 'Savings Percentage',
        'fixed_costs': 'Fixed Costs',
        'variable_costs': 'Variable Costs',
        'charter_revenue': 'Charter Revenue',
        
        # Settings
        'operational_costs_params': 'Operational Cost Parameters',
        'market_reference_prices': 'Market Reference Prices',
        'formulas_used': 'Formulas Used',
        'current_parameters': 'Current Parameters',
        'impact_preview': 'Impact Preview',
        
        # Specific Parameters
        'fuel_price': 'Fuel Price (R$/L)',
        'pilot_cost_hour': 'Pilot Cost (R$/h)',
        'annual_depreciation': 'Annual Depreciation (%)',
        'maintenance_costs': 'Maintenance Costs',
        'maintenance_turboprop': 'Turboprop Maintenance (R$/h)',
        'maintenance_jet': 'Jet Maintenance (R$/h)',
        'market_price_turboprop': 'Turboprop Market Price (R$/h)',
        'market_price_jet': 'Jet Market Price (R$/h)',
        
        # Status and Information
        'system_status': 'System Status',
        'system_operational': 'System Operational',
        'models_configured': 'models configured',
        'parameters_loaded': 'Parameters loaded',
        'features': 'Features',
        'usage_tips': 'Usage Tips',
        'quick_actions': 'Quick Actions',
        
        # Success/Error Messages
        'calculation_success': 'Calculation completed successfully',
        'settings_saved': 'Settings saved successfully!',
        'settings_save_error': 'Error saving settings',
        'calculation_error': 'Calculation error',
        'data_load_error': 'Error loading data',
        'no_models_configured': 'No models configured',
        'parameters_validation_error': 'Parameter validation error',
        
        # Insights and Analysis
        'profitable_operation': 'Profitable Operation',
        'operation_at_loss': 'Warning: Operation at Loss',
        'monthly_deficit': 'Monthly deficit',
        'recommend_increase_occupancy': 'Recommend increasing occupancy or reviewing costs',
        'excellent_viability': 'Excellent economic viability',
        'consider_increase_frequency': 'Consider increasing frequency for this operation',
        
        # Charts and Visualizations
        'financial_breakdown_monthly': 'Monthly Financial Breakdown',
        'annual_cost_comparison': 'Annual Comparison: Own Management vs. Amaro Aviation',
        'cost_composition': 'Cost Composition',
        'annual_savings_chart': 'Annual Savings',
        
        # Tooltips and Help
        'occupancy_tooltip': 'Effective utilization percentage of the aircraft',
        'fixed_costs_tooltip': 'Hangar, insurance, financing, etc.',
        'charter_revenue_tooltip': 'Consider compensatory charter revenue',
        'realistic_projections_tip': 'Use 70-80% occupancy for realistic projections',
        'consider_real_fixed_costs': 'Consider real fixed costs (hangar, insurance, etc.)',
        'review_parameters_periodically': 'Review parameters periodically',
        'export_presentations': 'Export reports for presentations',
        
        # Formulas
        'cost_calculation_formula': 'Cost per Hour Calculation',
        'savings_calculation_formula': 'Savings Calculation',
        'roi_calculation_formula': 'ROI Calculation',
        'formula_where': 'Where:',
        'formula_fuel': 'Fuel = Consumption (L/h) √ó Fuel Price (R$/L)',
        'formula_pilot': 'Pilot = Pilot Cost (R$/h)',
        'formula_maintenance': 'Maintenance = Maintenance Cost per type (R$/h)',
        'formula_depreciation': 'Depreciation = (Aircraft Value √ó Annual Depreciation %) √∑ Annual Hours',
        
        # Footer
        'developed_with_love': 'Developed with ‚ù§Ô∏è for commercial excellence',
        'refactored_system': 'Refactored System',
        'version': 'v3.0'
    }
}

def get_text(key, lang='pt'):
    """
    Obt√©m texto traduzido baseado na chave e idioma
    
    Args:
        key: Chave da tradu√ß√£o
        lang: C√≥digo do idioma ('pt' ou 'en')
    
    Returns:
        String traduzida ou a pr√≥pria chave se n√£o encontrada
    """
    try:
        return TRANSLATIONS.get(lang, TRANSLATIONS['pt']).get(key, key)
    except Exception:
        return key

def get_available_languages():
    """
    Retorna lista de idiomas dispon√≠veis
    
    Returns:
        List: Lista de c√≥digos de idioma dispon√≠veis
    """
    return list(TRANSLATIONS.keys())

def get_language_options():
    """
    Retorna op√ß√µes de idioma formatadas para selectbox
    
    Returns:
        List: Lista de op√ß√µes formatadas
    """
    return [
        "üáßüá∑ Portugu√™s",
        "üá∫üá∏ English"
    ]

def detect_language_from_selection(selection):
    """
    Detecta c√≥digo do idioma a partir da sele√ß√£o do usu√°rio
    
    Args:
        selection: String selecionada pelo usu√°rio
    
    Returns:
        String: C√≥digo do idioma ('pt' ou 'en')
    """
    if 'üáßüá∑' in selection:
        return 'pt'
    elif 'üá∫üá∏' in selection:
        return 'en'
    else:
        return 'pt'  # Default para portugu√™s

def translate_dict(data_dict, lang='pt', prefix=''):
    """
    Traduz chaves de um dicion√°rio usando as tradu√ß√µes dispon√≠veis
    
    Args:
        data_dict: Dicion√°rio para traduzir
        lang: Idioma alvo
        prefix: Prefixo para as chaves de tradu√ß√£o
    
    Returns:
        Dict: Dicion√°rio com chaves traduzidas
    """
    translated = {}
    
    for key, value in data_dict.items():
        # Tentar encontrar tradu√ß√£o
        translation_key = f"{prefix}_{key}" if prefix else key
        translated_key = get_text(translation_key, lang)
        
        # Se n√£o encontrou tradu√ß√£o, usar chave original formatada
        if translated_key == translation_key:
            translated_key = key.replace('_', ' ').title()
        
        translated[translated_key] = value
    
    return translated

def format_currency(value, lang='pt'):
    """
    Formata valores monet√°rios de acordo com o idioma
    
    Args:
        value: Valor num√©rico
        lang: Idioma para formata√ß√£o
    
    Returns:
        String: Valor formatado
    """
    try:
        if lang == 'pt':
            # Formato brasileiro: R$ 1.234.567,89
            return f"R$ {value:,.2f}".replace(",", "X").replace(".", ",").replace("X", ".")
        else:
            # Formato americano: R$ 1,234,567.89
            return f"R$ {value:,.2f}"
    except Exception:
        return str(value)

def format_percentage(value, lang='pt'):
    """
    Formata percentuais de acordo com o idioma
    
    Args:
        value: Valor percentual
        lang: Idioma para formata√ß√£o
    
    Returns:
        String: Percentual formatado
    """
    try:
        if lang == 'pt':
            return f"{value:.1f}%".replace(".", ",")
        else:
            return f"{value:.1f}%"
    except Exception:
        return str(value)

def get_month_names(lang='pt'):
    """
    Retorna nomes dos meses no idioma especificado
    
    Args:
        lang: C√≥digo do idioma
    
    Returns:
        List: Lista com nomes dos meses
    """
    if lang == 'pt':
        return [
            'Janeiro', 'Fevereiro', 'Mar√ßo', 'Abril', 'Maio', 'Junho',
            'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'
        ]
    else:
        return [
            'January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'
        ]

def get_aircraft_types(lang='pt'):
    """
    Retorna tipos de aeronave traduzidos
    
    Args:
        lang: C√≥digo do idioma
    
    Returns:
        Dict: Dicion√°rio com tipos traduzidos
    """
    if lang == 'pt':
        return {
            'turboprop': 'Turboprop',
            'jato': 'Jato',
            'jet': 'Jato'
        }
    else:
        return {
            'turboprop': 'Turboprop',
            'jato': 'Jet',
            'jet': 'Jet'
        }

# Classe auxiliar para gerenciamento de idioma
class LanguageManager:
    """
    Classe para gerenciar idioma da aplica√ß√£o de forma centralizada
    """
    
    def __init__(self, default_lang='pt'):
        self.current_lang = default_lang
    
    def set_language(self, lang):
        """Define idioma atual"""
        if lang in get_available_languages():
            self.current_lang = lang
    
    def get_current_language(self):
        """Retorna idioma atual"""
        return self.current_lang
    
    def t(self, key):
        """M√©todo de conveni√™ncia para tradu√ß√£o"""
        return get_text(key, self.current_lang)
    
    def format_currency(self, value):
        """M√©todo de conveni√™ncia para formata√ß√£o monet√°ria"""
        return format_currency(value, self.current_lang)
    
    def format_percentage(self, value):
        """M√©todo de conveni√™ncia para formata√ß√£o percentual"""
        return format_percentage(value, self.current_lang)

# Inst√¢ncia global para uso em toda aplica√ß√£o
language_manager = LanguageManager()

# Fun√ß√µes de conveni√™ncia para compatibilidade
def t(key, lang='pt'):
    """Fun√ß√£o de conveni√™ncia para tradu√ß√£o"""
    return get_text(key, lang)

def set_language(lang):
    """Define idioma globalmente"""
    language_manager.set_language(lang)

def get_current_language():
    """Obt√©m idioma atual"""
    return language_manager.get_current_language()

# Exemplo de uso
if __name__ == "__main__":
    # Testes b√°sicos
    print("=== Teste do Sistema de Idiomas ===")
    print()
    
    # Teste em portugu√™s
    print("Portugu√™s:")
    print(f"T√≠tulo: {get_text('app_title', 'pt')}")
    print(f"Subt√≠tulo: {get_text('app_subtitle', 'pt')}")
    print(f"Bot√£o Calcular: {get_text('calculate', 'pt')}")
    print()
    
    # Teste em ingl√™s
    print("English:")
    print(f"Title: {get_text('app_title', 'en')}")
    print(f"Subtitle: {get_text('app_subtitle', 'en')}")
    print(f"Calculate Button: {get_text('calculate', 'en')}")
    print()
    
    # Teste de formata√ß√£o
    print("Formata√ß√£o:")
    valor = 1234567.89
    print(f"Portugu√™s: {format_currency(valor, 'pt')}")
    print(f"English: {format_currency(valor, 'en')}")
    print()
    
    # Teste LanguageManager
    print("LanguageManager:")
    lm = LanguageManager('en')
    print(f"Current language: {lm.get_current_language()}")
    print(f"App title: {lm.t('app_title')}")
    print(f"Formatted currency: {lm.format_currency(1500.50)}")
    
    print("\n‚úÖ Testes conclu√≠dos com sucesso!")